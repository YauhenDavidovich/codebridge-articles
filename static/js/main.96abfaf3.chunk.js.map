{"version":3,"sources":["dal/api.ts","bll/articles-reducer.ts","components/Search.tsx","components/utils/dateConvert.ts","components/Article.tsx","components/HomePage.tsx","components/ArticlePage.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx"],"names":["instance","axios","create","baseURL","API","params","get","initialState","SET_ARTICLES","getArticlesTC","data","dispatch","then","res","articles","type","catch","err","console","log","StyledTextField","styled","TextField","name","slot","boxShadow","borderRadius","Search","props","className","Typography","variant","color","id","label","fullWidth","margin","onChange","e","setSearchTerm","target","value","gutterBottom","results","dateOptions","year","month","day","StyledCard","Card","background","border","marginBottom","maxWidth","width","height","position","StyledCardActions","CardActions","bottom","left","textDecoration","fontSize","marginTop","Article","CardMedia","component","image","imageUrl","alt","CardContent","Date","publishedAt","toLocaleDateString","highlightClassName","searchWords","search","autoEscape","textToHighlight","title","summary","Link","RouterLink","to","underline","HomePage","useState","searchTerm","useDispatch","useSelector","state","artilcles","searchedArticles","useMemo","searchInTitle","searchInSummary","searchedBoth","searched","filter","item","toLowerCase","includes","concat","pos","indexOf","useEffect","_limit","length","map","article","StyledPaper","Paper","alignSelf","padding","StyledArticleActions","ArticlePage","articleId","useParams","url","find","img","style","backgroundImage","backgroundRepeat","backgroundSize","align","paragraph","href","Main","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96abfaf3.chunk.js","sourcesContent":["import axios, {AxiosResponse} from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.spaceflightnewsapi.net/v3\",\r\n})\r\n\r\nexport const API = {\r\n    getArticles(params: GetArticlesParamsType) {\r\n        return instance.get<GetArticlesParamsType, AxiosResponse<Array<ArticlesType>>>('articles', {params: {...params}})\r\n    }\r\n}\r\n\r\nexport type GetArticlesParamsType = {\r\n    _limit: number\r\n}\r\n\r\nexport interface ArticlesType {\r\n    id: number;\r\n    title: string;\r\n    url: string;\r\n    imageUrl: string;\r\n    newsSite: string;\r\n    summary: string;\r\n    publishedAt: string;\r\n    updatedAt: string;\r\n    featured: boolean;\r\n    launches: Launch[];\r\n    events: any[];\r\n}\r\n\r\n\r\nexport interface Launch {\r\n    id: string;\r\n    provider: string;\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {API, ArticlesType, GetArticlesParamsType} from \"../dal/api\";\r\n\r\n\r\n// let initialState:ArticlesInitialStateType = {\r\n//     articles: [\r\n//         {\r\n//             id: 0,\r\n//             title: \"\",\r\n//             url: \"\",\r\n//             imageUrl: \"\",\r\n//             newsSite: \"\",\r\n//             summary: \"\",\r\n//             publishedAt: \"\",\r\n//             updatedAt: \"\",\r\n//             featured: false,\r\n//             launches: [],\r\n//             events: [],\r\n//         }],\r\n// };\r\n//\r\n// type ArticlesInitialStateType = {\r\n//     articles: ArticlesType[]\r\n// }\r\n\r\nconst initialState: Array<ArticlesType> = []\r\n\r\n//Reducer\r\nexport const articlesReducer = (state: Array<ArticlesType> = initialState, action: ActionsTypes): Array<ArticlesType> => {\r\n    switch (action.type) {\r\n        case SET_ARTICLES:\r\n            return action.articles\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst SET_ARTICLES = 'SET-SET_ARTICLES';\r\n\r\n// Action Creators\r\nexport const SetArticlesAC = (articles: Array<ArticlesType>) => ({\r\n    type: SET_ARTICLES,\r\n    articles,\r\n} as const);\r\n\r\nexport const getArticlesTC = (data: GetArticlesParamsType) => (dispatch: Dispatch) => {\r\n    API.getArticles(data)\r\n        .then(res => {\r\n            dispatch(SetArticlesAC(res.data))\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\n\r\nexport type SetArticlesType = ReturnType<typeof SetArticlesAC>\r\ntype ActionsTypes = SetArticlesType\r\n","import React from \"react\";\r\nimport {TextField, Typography} from \"@mui/material\";\r\nimport {styled} from \"@mui/system\";\r\n\r\ntype SearchPropsType = {\r\n    setSearchTerm: (e: string) => void\r\n    results: number\r\n}\r\n\r\n\r\nconst StyledTextField = styled(TextField, {\r\n    name: \"StyledTextField\",\r\n    slot: \"Search\"\r\n})({\r\n    boxShadow: \"0px 8px 24px rgba(0, 0, 0, 0.05)\",\r\n    borderRadius: 5,\r\n});\r\n\r\n\r\nconst Search = (props: SearchPropsType) => {\r\n    return (\r\n        <div className=\"search\">\r\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                Filter by keywords\r\n            </Typography>\r\n            <StyledTextField id=\"outlined-basic\" label=\"🔍 Search\" variant=\"outlined\" fullWidth margin={\"normal\"}\r\n                       onChange={(e) => props.setSearchTerm(e.target.value)}\r\n            />\r\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                Results: {props.results} articles\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","export interface DateTimeFormatOptions {\r\n    weekday?:\"long\" | \"short\" | \"narrow\";\r\n    year?: \"numeric\" | \"2-digit\";\r\n    month?: \"numeric\" | \"2-digit\" |\"long\" | \"short\" | \"narrow\";\r\n    day?: \"numeric\" | \"2-digit\";\r\n    hour?: \"numeric\" | \"2-digit\";\r\n    minute?: \"numeric\" | \"2-digit\";\r\n}\r\n\r\nexport const dateOptions:DateTimeFormatOptions = { year: 'numeric', month: 'long',day:\"numeric\" };\r\n","import React from \"react\";\r\nimport {styled} from \"@mui/system\";\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport {Card, CardActions, CardContent, CardMedia, Link, Typography} from \"@mui/material\";\r\nimport {dateOptions} from \"./utils/dateConvert\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\n\r\nconst StyledCard = styled(Card, {\r\n    name: \"StyledCard\",\r\n    slot: \"Wrapper\"\r\n})({\r\n    color: \"#6B8068\",\r\n    background: '#FFFFFF',\r\n    border: '1px solid #EAEAEA',\r\n    boxShadow: '0px 8px 24px rgba(0, 0, 0, 0.05)',\r\n    marginBottom: 45,\r\n    borderRadius: 5,\r\n    maxWidth: 400,\r\n    width: \"100%\",\r\n    height: 530,\r\n    position: 'relative',\r\n});\r\n\r\nconst StyledCardActions = styled(CardActions, {\r\n    name: \"StyledCardActions\",\r\n    slot: \"Link\"\r\n})({\r\n    position: 'absolute',\r\n    bottom: 8,\r\n    left: 8,\r\n    textDecoration: 'none',\r\n    color: \"#363636\",\r\n    fontSize: 16,\r\n    marginTop: 8\r\n});\r\n\r\n\r\ntype ArticleType = {\r\n    id: number,\r\n    title: string,\r\n    // \"url\": string,\r\n    imageUrl: string,\r\n    // \"newsSite\": string,\r\n    summary: string,\r\n    publishedAt: string,\r\n    search: string,\r\n}\r\n\r\n\r\n\r\nconst Article = (props: ArticleType) => {\r\n\r\n    return (\r\n        <StyledCard key={props.id}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"217\"\r\n                image={props.imageUrl}\r\n                alt=\"article image\"\r\n            />\r\n            <CardContent\r\n            >\r\n                <Typography gutterBottom variant=\"caption\" component=\"div\">\r\n                    {new Date(props.publishedAt).toLocaleDateString(\"en-US\",dateOptions)}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\r\n                    <Highlighter\r\n                        highlightClassName=\"YourHighlightClass\"\r\n                        searchWords={[props.search]}\r\n                        autoEscape={true}\r\n                        textToHighlight={props.title}\r\n                    />\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    <Highlighter\r\n                        highlightClassName=\"HighlightClass\"\r\n                        searchWords={[props.search]}\r\n                        autoEscape={true}\r\n                        textToHighlight={props.summary}\r\n                    />\r\n                </Typography>\r\n            </CardContent>\r\n            <StyledCardActions>\r\n                <Link component={RouterLink} to={\"/article/\"+props.id} color=\"black\" underline=\"none\">\r\n                    {'Read more→ '}\r\n                </Link>\r\n            </StyledCardActions>\r\n        </StyledCard>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Article\r\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {ArticlesType} from \"../dal/api\";\nimport {AppRootStateType} from \"../bll/store\";\nimport {getArticlesTC} from \"../bll/articles-reducer\";\nimport Search from \"./Search\";\nimport Article from \"./Article\";\n\nfunction HomePage() {\n    const [searchTerm, setSearchTerm] = useState(\"\")\n    const dispatch = useDispatch()\n    const articles = useSelector<AppRootStateType, Array<ArticlesType>>(state => state.artilcles)\n\n    let searchedArticles = useMemo(() => {\n        let searched: Array<ArticlesType> = [...articles]\n        let searchInTitle\n        let searchInSummary\n        let searchedBoth:Array<ArticlesType>\n        searchInTitle = searchTerm ? searched.filter(item => item.title.toLowerCase().includes(searchTerm.toLowerCase())) : searched\n        searchInSummary = searchTerm ? searched.filter(item => item.summary.toLowerCase().includes(searchTerm.toLowerCase())) : searched\n        searchedBoth = searchInTitle.concat(searchInSummary)\n        searched = searchedBoth.filter((item, pos) => searchedBoth.indexOf(item) === pos)\n        return searched\n    }, [articles, searchTerm])\n\n    useEffect(\n        () => {\n            dispatch(getArticlesTC({_limit: 39}))\n        }, []\n    )\n    return (\n\n        <div className=\"homepage\">\n            <Search setSearchTerm={setSearchTerm} results={searchedArticles.length+1}/>\n            <div className={\"articles__wrapper\"}>\n                {searchedArticles.map(article => {\n                    return <Article\n                        key={article.id}\n                        id={article.id}\n                        title={article.title}\n                        imageUrl={article.imageUrl}\n                        summary={article.summary}\n                        publishedAt={article.publishedAt}\n                        search={searchTerm}\n                    />\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default HomePage;\n","import React from \"react\";\r\nimport {styled} from \"@mui/system\";\r\nimport {Link as RouterLink, useParams} from 'react-router-dom';\r\nimport {Card, CardActions, Link, Paper, Typography} from \"@mui/material\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../bll/store\";\r\nimport {ArticlesType} from \"../dal/api\";\r\n\r\n\r\nconst StyledPaper = styled(Paper, {\r\n    name: \"StyledPaper\",\r\n    slot: \"Paper\"\r\n})({\r\n    alignSelf: \"center\",\r\n    padding: 15,\r\n});\r\n\r\nconst StyledArticleActions = styled(Typography, {\r\n    name: \"StyledArticleActions\",\r\n    slot: \"Link\"\r\n})({\r\n    position: 'absolute',\r\n    bottom: 16,\r\n    left: 16,\r\n    textDecoration: 'none',\r\n    fontSize: 16,\r\n    marginTop: 8\r\n});\r\n\r\n\r\n\r\nconst ArticlePage = () => {\r\n\r\n    const {articleId} = useParams() as {\r\n        articleId: string;\r\n    }\r\n    const articles = useSelector<AppRootStateType, Array<ArticlesType>>(state => state.artilcles)\r\n    const url = articles.find(article => article.id === +articleId)?.url\r\n    const title = articles.find(article => article.id === +articleId)?.title\r\n    const summary = articles.find(article => article.id === +articleId)?.summary\r\n    const img = articles.find(article => article.id === +articleId)?.imageUrl\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            backgroundImage: `url(${img})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: \"cover\",\r\n            height: \"100vh\"\r\n        }}>\r\n            <div className={\"article-page__wrapper\"}>\r\n                <StyledPaper>\r\n                    <Typography gutterBottom variant=\"h3\" align=\"center\" component=\"div\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body1\" paragraph component=\"div\">\r\n                        {summary}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body1\" paragraph component=\"div\">\r\n                        <a href={url}>Full article here</a>\r\n                    </Typography>\r\n                </StyledPaper>\r\n                <StyledArticleActions>\r\n                    <Link component={RouterLink} to={\"/home\"} color=\"black\" underline=\"none\">\r\n                        {'←Back to homepage'}\r\n                    </Link>\r\n                </StyledArticleActions>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ArticlePage\r\n","import React from 'react';\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport HomePage from \"./HomePage\";\r\nimport ArticlePage from \"./ArticlePage\";\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Routes >\r\n            <Route path='/home' element={<HomePage/>}/>\r\n            <Route path='/' element={<HomePage/>}/>\r\n            <Route path='/article/:articleId' element={<ArticlePage/>}/>\r\n            {/*<Route path='/404' element={<NotFound/>}/>*/}\r\n            {/*<Route path=\"*\" element={<Navigate to=\"/404\" />}/>*/}\r\n        </Routes>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport \"./App.css\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n    return (\n        <div className={\"App\"}>\n            <Main/>\n        </div>\n    )\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {articlesReducer} from \"./articles-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    artilcles: articlesReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from \"./bll/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n;\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}